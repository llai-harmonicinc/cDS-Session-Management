sequenceDiagram
participant P as Player
participant Boot as Bootstrap
participant LD as DNS resolver
participant AD as Authoritative DNS server

participant sNA as cDS::Node A
participant sNB as cDS::Node B
participant NA as cDN::Node A
participant TC as cDS TC
participant CS as Content Steering Servers
participant TE as cDS::Telemetry

autonumber
    P->>Boot: get session bootstrap
    Boot->>P: Bootstrap details e.g. endpoint, ad serving parameters, etc

    P->>LD: query cDS domain name
    LD->>AD: query cDS domain name
    AD->>LD:  cDS node IP for that DNS resolver
    LD->>P: cDS node IP

    P->>sNA: request master manifest
    sNA->>P: return master manifest (contains absolute content steering server url, variant manifest absolute urls)
    
    P->>CS: request steering manifest (along with current pathway, throughput)
    CS->>P: pathway priority list [cDS::Node B, cDS::TC]
    rect rgb(191, 223, 255)
    Note right of CS: cDS::TC as the last resort
    end
    
    P->>sNB: request variant manifest (contains relative segment url)
    sNB->>P: variant manifest

    %% establish TCP connection, 3 way handshake
    Note right of P: establish TCP connection
    P->>sNB: TCP SYN
    sNB->>P: ACK, SYN
    P->>sNB: SYN

    
    %% cDS:: Node start to push video segment
    Note left of NA: start pushing video segments
    sNB->>P: TCP segment (seq_num = 0)
    sNB->>P: TCP segment (seq_num = 100)
    P->>sNB: ACK (seq_num = 101)

    %% packet start missing and player request retransmission
    sNB->>P: TCP segment(seq_num = 200)
    sNB->>P: TCP segment(seq_num = 300)
    Note right of P: packet loss, retransmission timer timeout, send duplicate ACK to request retransmission
    P->>sNB: ACK (seq_num = 101)
    sNB->>P: reset connection
    
    sNB->>TE: report packet loss
    par TE to CS
        TE->>CS: update routing decision
    and TE to AD
        TE->>AD: update routing decision
    end

    %% player fail over to cDS::TC
    P->> TC: request master manifest 
    TC->>P: redirect HTTP request (302) to cDN::node
    P->>NA: request master manifest
    NA->>P: return master manifest (contains absolute content steering server url, variant manifest relative urls)
    P->>NA: request variant manifest
    NA->>P: return variant manifest (contains relative video/audio segment urls) 

    loop
        P->>NA: request video/audio segments
        NA->>P: return video/audio segments
    end
